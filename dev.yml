version: '3'

volumes:
  stratbot_dev_postgres_data: {}
  stratbot_dev_postgres_data_backups: {}
  redis_data: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/dev/django/Dockerfile
    image: stratbot_dev_django
    container_name: stratbot_dev_django
    restart: always
#    platform: linux/x86_64
    platform: linux/arm64
    depends_on:
      - postgres
      - redis
      - mailhog
    volumes:
      - .:/app:z
    env_file:
      - ./.envs/.dev/.django.env
      - ./.envs/.dev/.postgres.env
      - ./.envs/.dev/.redis.env
      - ./.envs/.dev/.celery.env
      - ./.envs/.dev/.docker.env
      - ./.envs/.dev/.secrets.env
      - ./.envs/.dev/.specific.env
    ports:
      - "8000:8000"
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/prod/postgres/Dockerfile
    image: stratbot_prod_timescaledb
    container_name: stratbot_dev_timescaledb
    restart: always
    volumes:
      - stratbot_dev_postgres_data:/var/lib/postgresql/data:Z
      - stratbot_dev_postgres_data_backups:/backups:z
    env_file:
      - ./.envs/.dev/.postgres.env
    ports:
      - "5432:5432"

  docs:
    image: stratbot_dev_docs
    container_name: stratbot_dev_docs
    platform: linux/x86_64
    build:
      context: .
      dockerfile: ./compose/dev/docs/Dockerfile
    env_file:
      - ./.envs/.dev/.django.env
      - ./.envs/.dev/.postgres.env
      - ./.envs/.dev/.redis.env
      - ./.envs/.dev/.celery.env
      - ./.envs/.dev/.docker.env
      - ./.envs/.dev/.secrets.env
      - ./.envs/.dev/.specific.env
    volumes:
      - ./docs:/docs:z
      - ./config:/app/config:z
      - ./stratbot:/app/stratbot:z
    ports:
      - "9020:9000"
    command: /start-docs

  mailhog:
    image: mailhog/mailhog:v1.0.0
    container_name: stratbot_dev_mailhog
    ports:
      - "1025:1025"
      - "8025:8025"

  redis:
    image: custom-redis-stack
    container_name: stratbot_dev_redis
    restart: always
    build:
      dockerfile: ./compose/dev/redis/Dockerfile
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  celeryworker:
    <<: *django
    image: stratbot_dev_celeryworker
    container_name: stratbot_dev_celeryworker
    restart: always
    depends_on:
      - redis
      - postgres
      - mailhog
    ports: []
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: stratbot_dev_celerybeat
    container_name: stratbot_dev_celerybeat
    restart: always
    depends_on:
      - redis
      - postgres
      - mailhog
    ports: []
    command: /start-celerybeat

  flower:
    <<: *django
    image: stratbot_dev_flower
    container_name: stratbot_dev_flower
    ports:
      - "5555:5555"
    command: /start-flower

  node:
    build:
      context: .
      dockerfile: ./compose/dev/node/Dockerfile
    image: stratbot_dev_node
    container_name: stratbot_dev_node
    depends_on:
      - django
    volumes:
      - .:/app:z
      # http://jdlm.info/articles/2016/03/06/lessons-building-node-app-docker.html
      - /app/node_modules
    env_file:
      - ./.envs/.dev/.node.env
      - ./.envs/.dev/.docker.env
      - ./.envs/.dev/.django.env
      - ./.envs/.dev/.secrets.env
      - ./.envs/.dev/.specific.env
    command: npm run dev
    ports:
      - "3020:3000"
      # Expose browsersync UI: https://www.browsersync.io/docs/options/#option-ui
      - "3021:3001"
